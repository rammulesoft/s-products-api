#%RAML 1.0 Trait

description: Trait defining common HTTP errors (status codes) that method may respond with in response '400 Bad Request', '429 Too Many Requests', '500 Internal Server Error', '503 Service Unavailable'.
    
responses:
  
  400:
    description: Bad Request - the request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.
    body: 
      application/json:
        type: !include ../types/type-response.raml
        example: !include ../examples/example-error-400-bad-request.json
  
  # Commented out, since RAML doesn't allow defining resource-wide response code, i.e., without specifying method and if method is defined in RAML it cannot be not allowed.
  #405:
  #  description: Method Not Allowed - HTTP method not allowed for this resource. The method specified in the Request-Line is not allowed for the resource identified by the Request-URI.
  #  headers:
  #    Allow:
  #      description: Valid methods for a specified resource.
  #      example: GET, HEAD
    
  429:
    description: |
      Too Many Requests - client has sent too many requests in a space of time (rate limiting).
      When a server is under attack or just receiving a very large number of requests from a single party, responding to each with a 429 status code will consume resources. Therefore, servers may drop connections or take other steps instead of responding with the 429 status code, when limiting resource usage.
    headers:
      Retry-After:
        description: Instructs the client to try again later. Value could be a specified period of time (in seconds) or a HTTP-date.
        type: integer | string
        required: false
        example: 120
    body: 
      application/json:
        type: !include ../types/type-response.raml
        example: !include ../examples/example-error-429.json
    
  500:
    description: Internal Server Error - server encountered an error processing request. This should not happen normally, but it is a generic error message, given when no more specific message is suitable.
    body: 
      application/json:
        type: !include ../types/type-response.raml
        example: !include ../examples/example-error-500.json

  503:
    description: |
      Service Unavailable - temporary maintenance of service, try again later. The implication is that this is a temporary condition which will be alleviated after some delay. If known, the length of the delay will be indicated in a Retry-After header. If no Retry-After is given, the client SHOULD handle the response as it would for a 500 response. Note: The existence of the 503 status code does not imply that a server will use it when becoming overloaded. Servers may simply refuse the connection.
    headers:
      Retry-After:
        description: Instructs the client to try again later. Value could be a specified period of time (in seconds) or a HTTP-date.
        type: integer | string
        required: false
        example: 120
